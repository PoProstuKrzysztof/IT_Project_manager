// <auto-generated />
using System;
using IT_Project_manager.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITProjectmanager.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221123200410_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("IT_Project_manager.Models.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("first_name");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT")
                        .HasColumnName("surname");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("telephone");

                    b.HasKey("Id");

                    b.ToTable("Managers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Maciej",
                            Surname = "Krasko",
                            Telephone = "123-456-789"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Zuzanna",
                            Surname = "Krasko",
                            Telephone = "987-654-321"
                        });
                });

            modelBuilder.Entity("IT_Project_manager.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "krzysiek.palonek@gmail.com",
                            Name = "Krzysztof",
                            Surname = "Palonek"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "marz.koł@gmail.com",
                            Name = "Marzena",
                            Surname = "Kołodziej"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jan.kow@gmail.com",
                            Name = "Jan",
                            Surname = "Kowalski"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Nat.uro@gmail.com",
                            Name = "Natalia",
                            Surname = "Urodek"
                        });
                });

            modelBuilder.Entity("ManagerMember", b =>
                {
                    b.Property<int>("ManagersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MembersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ManagersId", "MembersId");

                    b.HasIndex("MembersId");

                    b.ToTable("ManagerMember");

                    b.HasData(
                        new
                        {
                            ManagersId = 1,
                            MembersId = 1
                        },
                        new
                        {
                            ManagersId = 1,
                            MembersId = 2
                        },
                        new
                        {
                            ManagersId = 2,
                            MembersId = 3
                        },
                        new
                        {
                            ManagersId = 2,
                            MembersId = 4
                        });
                });

            modelBuilder.Entity("ManagerMember", b =>
                {
                    b.HasOne("IT_Project_manager.Models.Manager", null)
                        .WithMany()
                        .HasForeignKey("ManagersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IT_Project_manager.Models.Member", null)
                        .WithMany()
                        .HasForeignKey("MembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
